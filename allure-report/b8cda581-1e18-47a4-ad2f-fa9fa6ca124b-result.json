{"name": "test_searchResults[chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <Tests.test_search.Testsearch object at 0x10d8fa7c0>\n\n    def test_searchResults(self):\n        searchPage = SearchPage(self.driver)\n>       searchPage.go_to_searchPage()\n\nTests/test_search.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/searchPage.py:13: in go_to_searchPage\n    self.do_click(self.search_link)\nPages/BasePage.py:20: in do_click\n    WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(by_locator)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b1e84f6fe4f111026679ff3d49325bfd\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x10d9ae160>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException"}, "parameters": [{"name": "init_driver", "value": "'chrome'"}], "start": 1651482384961, "stop": 1651482395044, "uuid": "d30910e0-6966-4887-b5e2-f767cf610398", "historyId": "aff45ab18a0e2d11b68ca6882b605759", "testCaseId": "21e94383cf9f92bdd8f3e23d7c103c9b", "fullName": "Tests.test_search.Testsearch#test_searchResults", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_search"}, {"name": "subSuite", "value": "Testsearch"}, {"name": "host", "value": "lewis.mocha"}, {"name": "thread", "value": "15317-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_search"}]}